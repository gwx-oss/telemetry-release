resource_types:
- name: bbl-state-resource
  type: docker-image
  source:
    repository: cfinfrastructure/bbl-state-resource
- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

resources:
- name: bosh-cli-github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-cli
    release: true
    access_token: ((telemetry-release-github-access-token))
- name: bbl-cli-github-release
  type: github-release
  source:
    owner: cloudfoundry
    repository: bosh-bootloader
    release: true
    access_token: ((telemetry-release-github-access-token))
- name: telemetry-receiver-app
  type: cf
  source:
    api: ((cf-api-url))
    username: ((cf-username))
    password: ((cf-password))
    organization: ((cf-org))
    space: staging
- name: bbl-state
  type: bbl-state-resource
  source:
    bucket: ((bbl-state-bucket))
    iaas: gcp
    gcp_region: us-central1
    gcp_service_account_key: ((telemetry-release-gcp-service-account-key))
- name: xenial-stemcell
  type: bosh-io-stemcell
  source:
    name: bosh-google-kvm-ubuntu-xenial-go_agent
- name: bpm-release
  type: bosh-io-release
  source:
    repository: cloudfoundry-incubator/bpm-release
- name: telemetry-acceptance-deployment
  type: bosh-deployment
  source:
    deployment: ((acceptance-deployment-name))
    skip_check: true
- name: telemetry-staging-deployment
  type: bosh-deployment
  source:
    deployment: ((staging-deployment-name))
    skip_check: true
- name: manifest
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/telemetry-release
    private_key: ((telemetry-release-git-deploy-private-key))
    paths:
    - ci/manifest/telemetry.yml
- name: telemetry-release
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/telemetry-release
    private_key: ((telemetry-release-git-deploy-private-key))
- name: telemetry-receiver-source
  type: git
  source:
    branch: master
    uri: git@github.com:pivotal-cf/telemetry-release
    paths:
    - src/acceptance_tests/telemetry_receiver
    - ci/tasks/run-telemetry-receiver-tests.*
    private_key: ((telemetry-release-git-deploy-private-key))

jobs:
- name: bbl-up
  plan:
    - get: bbl-state
    - put: bbl-state
      params:
        command: up
        name: telemetry-release-bosh-director
- name: run-centralizer-unit-tests
  plan:
    - get: telemetry-release
      trigger: true
    - task: run-centralizer-unit-tests
      file: telemetry-release/ci/tasks/run-centralizer-unit-tests.yml
- name: deploy-telemetry-acceptance
  serial_groups: [acceptance]
  plan:
  - in_parallel:
    - get: bbl-state
      passed: [bbl-up]
    - get: xenial-stemcell
    - get: bpm-release
    - get: bosh-cli-github-release
      params:
        globs:
        - bosh-cli-*-linux-amd64
    - get: manifest
      trigger: true
    - get: telemetry-release
      passed: [run-centralizer-unit-tests]
      trigger: true
  - task: create-release
    file: telemetry-release/ci/tasks/create-release.yml
  - put: telemetry-acceptance-deployment
    params:
      manifest: manifest/ci/manifest/telemetry.yml
      source_file: bbl-state/bdr-source-file
      releases:
        - release-tarball/*.tgz
        - bpm-release/*.tgz
      stemcells:
        - xenial-stemcell/*.tgz
      vars:
        deployment_name: ((acceptance-deployment-name))
        loader_api_key: ((acceptance-loader-api-key))
        loader_endpoint: "((acceptance-loader-url))/components"
        env_type: ((acceptance-env-type))
        iaas_type: ((acceptance-iaas-type))
        foundation_id: ((acceptance-foundation-id))
        flush_interval: ((acceptance-centralizer-flush-interval))

- name: deploy-telemetry-receiver-app
  serial_groups: [telemetry-receiver]
  plan:
  - in_parallel:
    - get: telemetry-release
      resource: telemetry-receiver-source
      trigger: true
  - task: test-telemetry-receiver
    file: telemetry-release/ci/tasks/run-telemetry-receiver-tests.yml
  - put: telemetry-receiver-app
    params:
      manifest: telemetry-release/src/acceptance_tests/telemetry_receiver/manifest.yml
      environment_variables:
        VALID_API_KEYS: ((acceptance-loader-api-keys))
        MESSAGE_LIMIT: "50"

- name: test-acceptance-sends-to-centralizer
  serial_groups: [telemetry-receiver, acceptance]
  plan:
  - in_parallel:
    - get: bbl-state
    - get: telemetry-release
      passed: [deploy-telemetry-acceptance]
      trigger: true
    - get: bosh-cli-github-release
      params:
        globs:
          - bosh-cli-*-linux-amd64
    - get: bbl-cli-github-release
      params:
        globs:
          - bbl-v*_linux_x86-64
  - task: test-acceptance-sends-to-centralizer
    file: telemetry-release/ci/tasks/test-acceptance-sends-to-centralizer.yml
    params:
      LOADER_URL: ((acceptance-loader-url))
      LOADER_API_KEY: ((acceptance-loader-api-key))
      COMPONENTS_BOSH_DEPLOYMENT: telemetry-acceptance
      EXPECTED_ENV_TYPE: ((acceptance-env-type))
      EXPECTED_IAAS_TYPE: ((acceptance-iaas-type))
      EXPECTED_FOUNDATION_ID: ((acceptance-foundation-id))

- name: deploy-telemetry-staging
  plan:
  - in_parallel:
      - get: bbl-state
        passed: [bbl-up]
      - get: xenial-stemcell
      - get: bpm-release
      - get: bosh-cli-github-release
        params:
          globs:
            - bosh-cli-*-linux-amd64
      - get: manifest
        trigger: true
      - get: telemetry-release
        passed: [test-acceptance-sends-to-centralizer]
        trigger: true
  - task: create-release
    file: telemetry-release/ci/tasks/create-release.yml
  - put: telemetry-staging-deployment
    params:
      manifest: manifest/ci/manifest/telemetry.yml
      source_file: bbl-state/bdr-source-file
      releases:
        - release-tarball/*.tgz
        - bpm-release/*.tgz
      stemcells:
        - xenial-stemcell/*.tgz
      vars:
        deployment_name: ((staging-deployment-name))
        loader_api_key: ((staging-loader-api-key))
        loader_endpoint: ((staging-loader-endpoint))
        env_type: ((staging-env-type))
        iaas_type: ((staging-iaas-type))
        foundation_id: ((staging-foundation-id))
        flush_interval: ((staging-centralizer-flush-interval))
